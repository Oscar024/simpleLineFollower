Microchip MPLAB XC8 Compiler V1.33 ()

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v1.33\dat\en_msgs.txt -cs \
  -h+dist/default/production\simple_line_follower.X.production.sym \
  --cmf=dist/default/production\simple_line_follower.X.production.cmf -z \
  -Q18F4550 -oC:\Users\MCC\AppData\Local\Temp\s6n4.6 \
  -Mdist/default/production/simple_line_follower.X.production.map -E1 \
  -ver=XC8 -ASTACK=097h-07ffh -pstack=STACK -ACODE=00h-07FFFh \
  -ACONST=00h-07FFFh -ASMALLCONST=0800h-08FFhx120 \
  -AMEDIUMCONST=0800h-07FFFh -ACOMRAM=01h-05Fh -AABS1=00h-07FFh \
  -ABIGRAM=01h-07FFh -ARAM=060h-0FFh,0100h-01FFhx7 -ABANK0=060h-0FFh \
  -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh -ABANK3=0300h-03FFh \
  -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh -ABANK6=0600h-06FFh \
  -ABANK7=0700h-07FFh -ASFR=0F60h-0FFFh \
  -preset_vec=00h,intcode,intcodelo,powerup,init,end_init -pramtop=0800h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE \
  C:\Users\MCC\AppData\Local\Temp\s6n4.obj \
  dist/default/production\simple_line_follower.X.production.obj 

Object code version is 3.11

Machine type is 18F4550

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\MCC\AppData\Local\Temp\s6n4.obj
                end_init                              0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\simple_line_follower.X.production.obj
                smallconst                          800      800       B6      400       0
                text31                             250E     250E       2C      45B       0
                text30                             23FA     23FA       48      45B       0
                text29                             24E2     24E2       2C      45B       0
                text28                             2586     2586       20      45B       0
                text27                             25B6     25B6        E      45B       0
                text26                             23AA     23AA       50      45B       0
                text25                             2442     2442       38      45B       0
                text24                             2184     2184       7A      45B       0
                text23                             2072     2072       90      45B       0
                text22                             2560     2560       26      45B       0
                text21                             1E96     1E96       A8      45B       0
                text20                             177A     177A      1AC      45B       0
                text19                             247A     247A       36      45B       0
                text18                             1C40     1C40       D4      45B       0
                text17                             2102     2102       82      45B       0
                text16                             22E8     22E8       66      45B       0
                text15                             234E     234E       5C      45B       0
                text14                             1926     1926      136      45B       0
                text13                             1A5C     1A5C      100      45B       0
                text12                             1F3E     1F3E       A4      45B       0
                text11                             1FE2     1FE2       90      45B       0
                text10                             1B5C     1B5C       E4      45B       0
                text9                              253A     253A       26      45B       0
                text8                              1540     1540      23A      45B       0
                text7                              1172     1172      3CE      45B       0
                text6                               8B6      8B6      8BC      45B       0
                text5                              24B0     24B0       32      45B       0
                text4                              21FE     21FE       78      45B       0
                text3                              1D14     1D14       C6      45B       0
                text2                              2276     2276       72      45B       0
                text1                              1DDA     1DDA       BC      45B       0
                text0                              25A6     25A6       10      45B       0
                cstackCOMRAM                          1        1       52        1       1
                cstackBANK0                          60       60       37       60       1
                cinit                              25C4     25C4        A      45B       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              0        0        4         0
                text31                             250E     250E       2C         0
                text30                             23FA     23FA       48         0
                text29                             24E2     24E2       2C         0
                text28                             2586     2586       20         0
                text27                             25B6     25B6        E         0
                text26                             23AA     23AA       50         0
                text25                             2442     2442       38         0
                text24                             2184     2184       7A         0
                text23                             2072     2072       90         0
                text22                             2560     2560       26         0
                text21                             1E96     1E96       A8         0
                text20                             177A     177A      1AC         0
                text19                             247A     247A       36         0
                text18                             1C40     1C40       D4         0
                text17                             2102     2102       82         0
                text16                             22E8     22E8       66         0
                text15                             234E     234E       5C         0
                text14                             1926     1926      136         0
                text13                             1A5C     1A5C      100         0
                text12                             1F3E     1F3E       A4         0
                text11                             1FE2     1FE2       90         0
                text10                             1B5C     1B5C       E4         0
                text9                              253A     253A       26         0
                text8                              1540     1540      23A         0
                text7                              1172     1172      3CE         0
                text6                               8B6      8B6      8BC         0
                text5                              24B0     24B0       32         0
                text4                              21FE     21FE       78         0
                text3                              1D14     1D14       C6         0
                text2                              2276     2276       72         0
                text1                              1DDA     1DDA       BC         0
                text0                              25A6     25A6       10         0
                cinit                              25C4     25C4        A         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          800      800       B6         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                cstackCOMRAM                          1        1       52         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          60       60       37         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   BANK6          

        CLASS   BANK7          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  000052  000053         1       1  COMRAM  
                cstackBANK0                    000060  000037  000097        60       1  BANK0   
                smallconst                     000800  0000B6  0008B6       400       0  SMALLCON
                text6                          0008B6  001D18  0025CE       45B       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            000097-0000FF               69
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BANK6            000600-0006FF              100
        BANK7            000700-0007FF              100
        BIGRAM           000053-00005F                D
                         000097-0007FF              769
        CODE             000004-0007FF              7FC
                         0025CE-007FFF             5A32
        COMRAM           000053-00005F                D
        CONST            000004-0007FF              7FC
                         0025CE-007FFF             5A32
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      0025CE-007FFF             5A32
        RAM              000097-0007FF              100
        SFR              000F60-000FFF               A0
        SMALLCONST       0025CE-007FFF              100
        STACK            000097-0007FF              769

                                  Symbol Table

?___awdiv                   cstackCOMRAM 000007
?___awmod                   cstackCOMRAM 000001
?___ftadd                   cstackCOMRAM 00002E
?___ftmul                   cstackCOMRAM 000015
?___ftneg                   cstackCOMRAM 000001
?___ftpack                  cstackCOMRAM 000001
?___ftsub                   cstackCOMRAM 00003A
?___fttol                   cstackCOMRAM 00002B
?___lldiv                   cstackCOMRAM 000001
?___llmod                   cstackCOMRAM 00000E
?___lltoft                  cstackCOMRAM 000009
?___wmul                    cstackCOMRAM 00000F
?__div_to_l_                cstackCOMRAM 000001
?__tdiv_to_l_               cstackCOMRAM 000001
?_fround                    cstackCOMRAM 000024
?_getCNY70Value             cstackCOMRAM 000001
?_scale                     cstackCOMRAM 000024
?_sprintf                   cstackCOMRAM 000040
Lcd_Cmd@a                   cstackCOMRAM 000003
Lcd_Port@a                  cstackCOMRAM 000001
Lcd_Set_Cursor@a            cstackCOMRAM 000005
Lcd_Set_Cursor@b            cstackCOMRAM 000004
Lcd_Set_Cursor@temp         cstackCOMRAM 000008
Lcd_Set_Cursor@y            cstackCOMRAM 000007
Lcd_Set_Cursor@z            cstackCOMRAM 000006
Lcd_Write_Char@a            cstackCOMRAM 000004
Lcd_Write_Char@temp         cstackCOMRAM 000002
Lcd_Write_Char@y            cstackCOMRAM 000003
Lcd_Write_Integer@a         cstackCOMRAM 00004D
Lcd_Write_Integer@s         cstackBANK0  000083
Lcd_Write_String@a          cstackCOMRAM 000005
Lcd_Write_String@i          cstackCOMRAM 000009
Pause_ms@i                  cstackCOMRAM 000003
Pause_ms@x                  cstackCOMRAM 000001
Pause_seg@i                 cstackCOMRAM 000006
Pause_seg@x                 cstackCOMRAM 000005
RobotControl@sensed         cstackCOMRAM 000051
_ADCON1bits                 (abs)        000FC1
_INTCON                     (abs)        000FF2
_Lcd_Clear                  text27       0025B6
_Lcd_Cmd                    text28       002586
_Lcd_Init                   text2        002276
_Lcd_Port                   text29       0024E2
_Lcd_Set_Cursor             text26       0023AA
_Lcd_Write_Char             text25       002442
_Lcd_Write_Integer          text5        0024B0
_Lcd_Write_String           text24       002184
_OSCCONbits                 (abs)        000FD3
_PORTA                      (abs)        000F80
_PORTB                      (abs)        000F81
_PORTBbits                  (abs)        000F81
_PORTDbits                  (abs)        000F83
_PORTE                      (abs)        000F84
_PORTEbits                  (abs)        000F84
_Pause_ms                   text31       00250E
_Pause_seg                  text30       0023FA
_RobotControl               text3        001D14
_TRISA                      (abs)        000F92
_TRISB                      (abs)        000F93
_TRISBbits                  (abs)        000F93
_TRISC                      (abs)        000F94
_TRISCbits                  (abs)        000F94
_TRISD                      (abs)        000F95
_TRISE                      (abs)        000F96
__CFG_BOR$OFF               (abs)        000000
__CFG_BORV$3                (abs)        000000
__CFG_CCP2MX$ON             (abs)        000000
__CFG_CP0$OFF               (abs)        000000
__CFG_CP1$OFF               (abs)        000000
__CFG_CP2$OFF               (abs)        000000
__CFG_CP3$OFF               (abs)        000000
__CFG_CPB$OFF               (abs)        000000
__CFG_CPD$OFF               (abs)        000000
__CFG_CPUDIV$OSC1_PLL2      (abs)        000000
__CFG_DEBUG$OFF             (abs)        000000
__CFG_EBTR0$OFF             (abs)        000000
__CFG_EBTR1$OFF             (abs)        000000
__CFG_EBTR2$OFF             (abs)        000000
__CFG_EBTR3$OFF             (abs)        000000
__CFG_EBTRB$OFF             (abs)        000000
__CFG_FCMEN$OFF             (abs)        000000
__CFG_FOSC$INTOSCIO_EC      (abs)        000000
__CFG_ICPRT$OFF             (abs)        000000
__CFG_IESO$OFF              (abs)        000000
__CFG_LPT1OSC$OFF           (abs)        000000
__CFG_LVP$OFF               (abs)        000000
__CFG_MCLRE$ON              (abs)        000000
__CFG_PBADEN$OFF            (abs)        000000
__CFG_PLLDIV$1              (abs)        000000
__CFG_PWRT$OFF              (abs)        000000
__CFG_STVREN$ON             (abs)        000000
__CFG_USBDIV$2              (abs)        000000
__CFG_VREGEN$OFF            (abs)        000000
__CFG_WDT$OFF               (abs)        000000
__CFG_WDTPS$32768           (abs)        000000
__CFG_WRT0$OFF              (abs)        000000
__CFG_WRT1$OFF              (abs)        000000
__CFG_WRT2$OFF              (abs)        000000
__CFG_WRT3$OFF              (abs)        000000
__CFG_WRTB$OFF              (abs)        000000
__CFG_WRTC$OFF              (abs)        000000
__CFG_WRTD$OFF              (abs)        000000
__CFG_XINST$OFF             (abs)        000000
__HRAM                      (abs)        000000
__Habs1                     abs1         000000
__Hbank0                    bank0        000000
__Hbank1                    bank1        000000
__Hbank2                    bank2        000000
__Hbank3                    bank3        000000
__Hbank4                    bank4        000000
__Hbank5                    bank5        000000
__Hbank6                    bank6        000000
__Hbank7                    bank7        000000
__Hbigbss                   bigbss       000000
__Hbigdata                  bigdata      000000
__Hbigram                   bigram       000000
__Hbss                      bss          000000
__Hcinit                    cinit        000000
__Hclrtext                  clrtext      000000
__Hcomram                   comram       000000
__Hconfig                   config       30000E
__Hconst                    const        000000
__HcstackBANK0              cstackBANK0  000000
__HcstackCOMRAM             cstackCOMRAM 000000
__Hdata                     data         000000
__Heeprom_data              eeprom_data  000000
__Hend_init                 end_init     000004
__Hfarbss                   farbss       000000
__Hfardata                  fardata      000000
__Hibigdata                 ibigdata     000000
__Hidata                    idata        000000
__Hidloc                    idloc        200008
__Hifardata                 ifardata     000000
__Hinit                     init         000000
__Hintcode                  intcode      000000
__Hintcode_body             intcode_body 000000
__Hintcodelo                intcodelo    000000
__Hintentry                 intentry     000000
__Hintret                   intret       000000
__Hintsave_regs             intsave_regs 000000
__Hirdata                   irdata       000000
__Hmediumconst              mediumconst  000000
__HnvFARRAM                 nvFARRAM     000000
__Hnvbit                    nvbit        000000
__Hnvrram                   nvrram       000000
__Hparam                    rparam       000000
__Hpowerup                  powerup      000000
__Hram                      ram          000000
__Hramtop                   ramtop       000800
__Hrbit                     rbit         000000
__Hrbss                     rbss         000000
__Hrdata                    rdata        000000
__Hreset_vec                reset_vec    000000
__Hrparam                   rparam       000000
__Hsfr                      sfr          000000
__Hsmallconst               smallconst   0008B6
__Hspace_0                  (abs)        30000E
__Hspace_1                  (abs)        000097
__Hspace_2                  (abs)        000000
__Hstack                    stack        000000
__Hstruct                   struct       000000
__Htemp                     temp         000000
__Htext                     text         000000
__Htext0                    text0        000000
__Htext1                    text1        000000
__Htext10                   text10       000000
__Htext11                   text11       000000
__Htext12                   text12       000000
__Htext13                   text13       000000
__Htext14                   text14       000000
__Htext15                   text15       000000
__Htext16                   text16       000000
__Htext17                   text17       000000
__Htext18                   text18       000000
__Htext19                   text19       000000
__Htext2                    text2        000000
__Htext20                   text20       000000
__Htext21                   text21       000000
__Htext22                   text22       000000
__Htext23                   text23       000000
__Htext24                   text24       000000
__Htext25                   text25       000000
__Htext26                   text26       000000
__Htext27                   text27       000000
__Htext28                   text28       000000
__Htext29                   text29       000000
__Htext3                    text3        000000
__Htext30                   text30       000000
__Htext31                   text31       000000
__Htext4                    text4        000000
__Htext5                    text5        000000
__Htext6                    text6        000000
__Htext7                    text7        000000
__Htext8                    text8        000000
__Htext9                    text9        000000
__LRAM                      (abs)        000001
__Labs1                     abs1         000000
__Lbank0                    bank0        000000
__Lbank1                    bank1        000000
__Lbank2                    bank2        000000
__Lbank3                    bank3        000000
__Lbank4                    bank4        000000
__Lbank5                    bank5        000000
__Lbank6                    bank6        000000
__Lbank7                    bank7        000000
__Lbigbss                   bigbss       000000
__Lbigdata                  bigdata      000000
__Lbigram                   bigram       000000
__Lbss                      bss          000000
__Lcinit                    cinit        000000
__Lclrtext                  clrtext      000000
__Lcomram                   comram       000000
__Lconfig                   config       300000
__Lconst                    const        000000
__LcstackBANK0              cstackBANK0  000000
__LcstackCOMRAM             cstackCOMRAM 000000
__Ldata                     data         000000
__Leeprom_data              eeprom_data  000000
__Lend_init                 end_init     000000
__Lfarbss                   farbss       000000
__Lfardata                  fardata      000000
__Libigdata                 ibigdata     000000
__Lidata                    idata        000000
__Lidloc                    idloc        200000
__Lifardata                 ifardata     000000
__Linit                     init         000000
__Lintcode                  intcode      000000
__Lintcode_body             intcode_body 000000
__Lintcodelo                intcodelo    000000
__Lintentry                 intentry     000000
__Lintret                   intret       000000
__Lintsave_regs             intsave_regs 000000
__Lirdata                   irdata       000000
__Lmediumconst              mediumconst  000000
__LnvFARRAM                 nvFARRAM     000000
__Lnvbit                    nvbit        000000
__Lnvrram                   nvrram       000000
__Lparam                    rparam       000000
__Lpowerup                  powerup      000000
__Lram                      ram          000000
__Lramtop                   ramtop       000800
__Lrbit                     rbit         000000
__Lrbss                     rbss         000000
__Lrdata                    rdata        000000
__Lreset_vec                reset_vec    000000
__Lrparam                   rparam       000000
__Lsfr                      sfr          000000
__Lsmallconst               smallconst   000800
__Lspace_0                  (abs)        000000
__Lspace_1                  (abs)        000000
__Lspace_2                  (abs)        000000
__Lstack                    stack        000000
__Lstruct                   struct       000000
__Ltemp                     temp         000000
__Ltext                     text         000000
__Ltext0                    text0        000000
__Ltext1                    text1        000000
__Ltext10                   text10       000000
__Ltext11                   text11       000000
__Ltext12                   text12       000000
__Ltext13                   text13       000000
__Ltext14                   text14       000000
__Ltext15                   text15       000000
__Ltext16                   text16       000000
__Ltext17                   text17       000000
__Ltext18                   text18       000000
__Ltext19                   text19       000000
__Ltext2                    text2        000000
__Ltext20                   text20       000000
__Ltext21                   text21       000000
__Ltext22                   text22       000000
__Ltext23                   text23       000000
__Ltext24                   text24       000000
__Ltext25                   text25       000000
__Ltext26                   text26       000000
__Ltext27                   text27       000000
__Ltext28                   text28       000000
__Ltext29                   text29       000000
__Ltext3                    text3        000000
__Ltext30                   text30       000000
__Ltext31                   text31       000000
__Ltext4                    text4        000000
__Ltext5                    text5        000000
__Ltext6                    text6        000000
__Ltext7                    text7        000000
__Ltext8                    text8        000000
__Ltext9                    text9        000000
__S0                        (abs)        30000E
__S1                        (abs)        000097
__S2                        (abs)        000000
___awdiv                    text12       001F3E
___awdiv@counter            cstackCOMRAM 00000B
___awdiv@dividend           cstackCOMRAM 000007
___awdiv@divisor            cstackCOMRAM 000009
___awdiv@quotient           cstackCOMRAM 00000D
___awdiv@sign               cstackCOMRAM 00000C
___awmod                    text11       001FE2
___awmod@counter            cstackCOMRAM 000005
___awmod@dividend           cstackCOMRAM 000001
___awmod@divisor            cstackCOMRAM 000003
___awmod@sign               cstackCOMRAM 000006
___ftadd                    text20       00177A
___ftadd@exp1               cstackCOMRAM 000039
___ftadd@exp2               cstackCOMRAM 000038
___ftadd@f1                 cstackCOMRAM 00002E
___ftadd@f2                 cstackCOMRAM 000031
___ftadd@sign               cstackCOMRAM 000037
___ftge                     text23       002072
___ftge@ff1                 cstackCOMRAM 000001
___ftge@ff2                 cstackCOMRAM 000004
___ftmul                    text10       001B5C
___ftmul@cntr               cstackCOMRAM 000022
___ftmul@exp                cstackCOMRAM 00001E
___ftmul@f1                 cstackCOMRAM 000015
___ftmul@f2                 cstackCOMRAM 000018
___ftmul@f3_as_product      cstackCOMRAM 00001F
___ftmul@sign               cstackCOMRAM 000023
___ftneg                    text22       002560
___ftneg@f1                 cstackCOMRAM 000001
___ftpack                   text21       001E96
___ftpack@arg               cstackCOMRAM 000001
___ftpack@exp               cstackCOMRAM 000004
___ftpack@sign              cstackCOMRAM 000005
___ftsub                    text19       00247A
___ftsub@f1                 cstackCOMRAM 00003A
___ftsub@f2                 cstackCOMRAM 00003D
___fttol                    text18       001C40
___fttol@exp1               cstackCOMRAM 000039
___fttol@f1                 cstackCOMRAM 00002B
___fttol@lval               cstackCOMRAM 000035
___fttol@sign1              cstackCOMRAM 000034
___inthi_sp                 stack        000000
___intlo_sp                 stack        000000
___lldiv                    text17       002102
___lldiv@counter            cstackCOMRAM 00000D
___lldiv@dividend           cstackCOMRAM 000001
___lldiv@divisor            cstackCOMRAM 000005
___lldiv@quotient           cstackCOMRAM 000009
___llmod                    text16       0022E8
___llmod@counter            cstackCOMRAM 000016
___llmod@dividend           cstackCOMRAM 00000E
___llmod@divisor            cstackCOMRAM 000012
___lltoft                   text15       00234E
___lltoft@c                 cstackCOMRAM 000009
___lltoft@exp               cstackCOMRAM 000011
___sp                       stack        000000
___wmul                     text9        00253A
___wmul@multiplicand        cstackCOMRAM 000011
___wmul@multiplier          cstackCOMRAM 00000F
___wmul@product             cstackCOMRAM 000013
__accesstop                 (abs)        000060
__activetblptr              (abs)        000002
__div_to_l_                 text14       001926
__div_to_l_@cntr            cstackCOMRAM 00000F
__div_to_l_@exp1            cstackCOMRAM 000010
__div_to_l_@f1              cstackCOMRAM 000001
__div_to_l_@f2              cstackCOMRAM 000004
__div_to_l_@quot            cstackCOMRAM 00000B
__end_of_Lcd_Clear          text27       0025C4
__end_of_Lcd_Cmd            text28       0025A6
__end_of_Lcd_Init           text2        0022E8
__end_of_Lcd_Port           text29       00250E
__end_of_Lcd_Set_Cursor     text26       0023FA
__end_of_Lcd_Write_Char     text25       00247A
__end_of_Lcd_Write_Integer  text5        0024E2
__end_of_Lcd_Write_String   text24       0021FE
__end_of_Pause_ms           text31       00253A
__end_of_Pause_seg          text30       002442
__end_of_RobotControl       text3        001DDA
__end_of___awdiv            text12       001FE2
__end_of___awmod            text11       002072
__end_of___ftadd            text20       001926
__end_of___ftge             text23       002102
__end_of___ftmul            text10       001C40
__end_of___ftneg            text22       002586
__end_of___ftpack           text21       001F3E
__end_of___ftsub            text19       0024B0
__end_of___fttol            text18       001D14
__end_of___lldiv            text17       002184
__end_of___llmod            text16       00234E
__end_of___lltoft           text15       0023AA
__end_of___wmul             text9        002560
__end_of__div_to_l_         text14       001A5C
__end_of__initialization    cinit        0025C4
__end_of__npowers_          smallconst   000850
__end_of__powers_           smallconst   000877
__end_of__stringdata        smallconst   0008B4
__end_of__tdiv_to_l_        text13       001B5C
__end_of_dpowers            smallconst   000829
__end_of_fround             text8        00177A
__end_of_getCNY70Value      text4        002276
__end_of_main               text0        0025B6
__end_of_mcu_init           text1        001E96
__end_of_scale              text7        001540
__end_of_sprintf            text6        001172
__initialization            cinit        0025C4
__mediumconst               mediumconst  000000
__npowers_                  smallconst   000829
__pcinit                    cinit        0025C4
__pcstackBANK0              cstackBANK0  000060
__pcstackCOMRAM             cstackCOMRAM 000001
__powers_                   smallconst   000850
__psmallconst               smallconst   000800
__ptext0                    text0        0025A6
__ptext1                    text1        001DDA
__ptext10                   text10       001B5C
__ptext11                   text11       001FE2
__ptext12                   text12       001F3E
__ptext13                   text13       001A5C
__ptext14                   text14       001926
__ptext15                   text15       00234E
__ptext16                   text16       0022E8
__ptext17                   text17       002102
__ptext18                   text18       001C40
__ptext19                   text19       00247A
__ptext2                    text2        002276
__ptext20                   text20       00177A
__ptext21                   text21       001E96
__ptext22                   text22       002560
__ptext23                   text23       002072
__ptext24                   text24       002184
__ptext25                   text25       002442
__ptext26                   text26       0023AA
__ptext27                   text27       0025B6
__ptext28                   text28       002586
__ptext29                   text29       0024E2
__ptext3                    text3        001D14
__ptext30                   text30       0023FA
__ptext31                   text31       00250E
__ptext4                    text4        0021FE
__ptext5                    text5        0024B0
__ptext6                    text6        0008B6
__ptext7                    text7        001172
__ptext8                    text8        001540
__ptext9                    text9        00253A
__ramtop                    ramtop       000800
__size_of_Lcd_Clear         (abs)        000000
__size_of_Lcd_Cmd           (abs)        000000
__size_of_Lcd_Init          (abs)        000000
__size_of_Lcd_Port          (abs)        000000
__size_of_Lcd_Set_Cursor    (abs)        000000
__size_of_Lcd_Write_Char    (abs)        000000
__size_of_Lcd_Write_Integer (abs)        000000
__size_of_Lcd_Write_String  (abs)        000000
__size_of_Pause_ms          (abs)        000000
__size_of_Pause_seg         (abs)        000000
__size_of_RobotControl      (abs)        000000
__size_of___awdiv           (abs)        000000
__size_of___awmod           (abs)        000000
__size_of___ftadd           (abs)        000000
__size_of___ftge            (abs)        000000
__size_of___ftmul           (abs)        000000
__size_of___ftneg           (abs)        000000
__size_of___ftpack          (abs)        000000
__size_of___ftsub           (abs)        000000
__size_of___fttol           (abs)        000000
__size_of___lldiv           (abs)        000000
__size_of___llmod           (abs)        000000
__size_of___lltoft          (abs)        000000
__size_of___wmul            (abs)        000000
__size_of__div_to_l_        (abs)        000000
__size_of__tdiv_to_l_       (abs)        000000
__size_of_fround            (abs)        000000
__size_of_getCNY70Value     (abs)        000000
__size_of_main              (abs)        000000
__size_of_mcu_init          (abs)        000000
__size_of_scale             (abs)        000000
__size_of_sprintf           (abs)        000000
__smallconst                smallconst   000800
__stringdata                smallconst   000877
__tdiv_to_l_                text13       001A5C
__tdiv_to_l_@cntr           cstackCOMRAM 00000E
__tdiv_to_l_@exp1           cstackCOMRAM 00000F
__tdiv_to_l_@f1             cstackCOMRAM 000001
__tdiv_to_l_@f2             cstackCOMRAM 000004
__tdiv_to_l_@quot           cstackCOMRAM 00000A
_dpowers                    smallconst   000801
_fround                     text8        001540
_fround$1278                cstackCOMRAM 00002A
_fround$1279                cstackCOMRAM 000027
_getCNY70Value              text4        0021FE
_main                       text0        0025A6
_mcu_init                   text1        001DDA
_scale                      text7        001172
_scale$1280                 cstackCOMRAM 000027
_sprintf                    text6        0008B6
_sprintf$1281               cstackBANK0  000060
_sprintf$754                cstackBANK0  000063
end_of_initialization       cinit        0025C4
fround@prec                 cstackCOMRAM 00002D
intlevel0                   text         000000
intlevel1                   text         000000
intlevel2                   text         000000
intlevel3                   text         000000
mcu_init@i                  cstackCOMRAM 00000C
scale@scl                   cstackCOMRAM 00002A
sprintf@_val                cstackBANK0  000078
sprintf@ap                  cstackBANK0  00006F
sprintf@c                   cstackBANK0  000082
sprintf@exp                 cstackBANK0  00007D
sprintf@f                   cstackCOMRAM 000042
sprintf@flag                cstackBANK0  000071
sprintf@fval                cstackBANK0  00007F
sprintf@integ               cstackBANK0  000073
sprintf@prec                cstackBANK0  000076
sprintf@sp                  cstackCOMRAM 000040
sprintf@vd                  cstackBANK0  000067
sprintf@vd_756              cstackBANK0  00006B
stackhi                     (abs)        0007FF
stacklo                     (abs)        000097
start                       init         000000
start_initialization        cinit        0025C4


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 18 in file "main line follower.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  sensed          2    0        int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    6
 This function calls:
		_Pause_seg
		_RobotControl
		_mcu_init
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _mcu_init *****************
 Defined at:
		line 4 in file "funciones.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   11[COMRAM] int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd_Clear
		_Lcd_Init
		_Lcd_Set_Cursor
		_Lcd_Write_String
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Init *****************
 Defined at:
		line 57 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Cmd
		_Lcd_Port
 This function is called by:
		_mcu_init
 This function uses a non-reentrant model


 *************** function _RobotControl *****************
 Defined at:
		line 44 in file "funciones.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  sensed          2   80[COMRAM] int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_Lcd_Clear
		_Lcd_Set_Cursor
		_Lcd_Write_Integer
		_Lcd_Write_String
		_getCNY70Value
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _getCNY70Value *****************
 Defined at:
		line 3 in file "cny70.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    0[COMRAM] int 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_RobotControl
 This function uses a non-reentrant model


 *************** function _Lcd_Write_Integer *****************
 Defined at:
		line 113 in file "lcd.c"
 Parameters:    Size  Location     Type
  a               2   76[COMRAM] int 
 Auto vars:     Size  Location     Type
  s              20   35[BANK0 ] unsigned char [20]
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         0      20       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2      20       0       0       0       0       0       0       0
Total ram usage:       22 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_Lcd_Write_String
		_sprintf
 This function is called by:
		_RobotControl
 This function uses a non-reentrant model


 *************** function _sprintf *****************
 Defined at:
		line 492 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\doprnt.c"
 Parameters:    Size  Location     Type
  sp              2   63[COMRAM] PTR unsigned char 
		 -> Lcd_Write_Integer@s(20), Lcd_Write_Float@s(20), 
  f               2   65[COMRAM] PTR const unsigned char 
		 -> STR_9(13), STR_8(11), 
 Auto vars:     Size  Location     Type
  vd              4    7[BANK0 ] unsigned long 
  vd              4   11[BANK0 ] unsigned long 
  _val            5   24[BANK0 ] struct .
  fval            3   31[BANK0 ] struct .
  integ           3   19[BANK0 ] struct .
  ival            3    0        struct .
  exp             2   29[BANK0 ] int 
  prec            2   22[BANK0 ] int 
  flag            2   17[BANK0 ] unsigned short 
  ap              2   15[BANK0 ] PTR void [1]
		 -> ?_sprintf(2), 
  width           2    0        int 
  c               1   34[BANK0 ] char 
  d               1    0        unsigned char 
 Return value:  Size  Location     Type
                  2   63[COMRAM] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         7       0       0       0       0       0       0       0       0
      Locals:         0      35       0       0       0       0       0       0       0
      Temps:          6       0       0       0       0       0       0       0       0
      Totals:        13      35       0       0       0       0       0       0       0
Total ram usage:       48 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___awdiv
		___ftadd
		___ftge
		___ftmul
		___ftneg
		___ftsub
		___fttol
		___lldiv
		___llmod
		___lltoft
		___wmul
		__div_to_l_
		__tdiv_to_l_
		_fround
		_scale
 This function is called by:
		_Lcd_Write_Integer
		_Lcd_Write_Float
 This function uses a non-reentrant model


 *************** function _scale *****************
 Defined at:
		line 425 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\doprnt.c"
 Parameters:    Size  Location     Type
  scl             1    wreg     char 
 Auto vars:     Size  Location     Type
  scl             1   41[COMRAM] char 
 Return value:  Size  Location     Type
                  3   35[COMRAM] char 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         3       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___awdiv
		___awmod
		___ftmul
		___wmul
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function _fround *****************
 Defined at:
		line 409 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\doprnt.c"
 Parameters:    Size  Location     Type
  prec            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  prec            1   44[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3   35[COMRAM] unsigned char 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         3       0       0       0       0       0       0       0       0
      Locals:         7       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:        10       0       0       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___awdiv
		___awmod
		___ftmul
		___wmul
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2   14[COMRAM] unsigned int 
  multiplicand    2   16[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   18[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2   14[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_fround
		_scale
		_sprintf
 This function uses a non-reentrant model


 *************** function ___ftmul *****************
 Defined at:
		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftmul.c"
 Parameters:    Size  Location     Type
  f1              3   20[COMRAM] float 
  f2              3   23[COMRAM] float 
 Auto vars:     Size  Location     Type
  f3_as_produc    3   30[COMRAM] unsigned um
  sign            1   34[COMRAM] unsigned char 
  cntr            1   33[COMRAM] unsigned char 
  exp             1   29[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3   20[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0       0       0
      Totals:        15       0       0       0       0       0       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_fround
		_scale
		_sprintf
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 8 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\awmod.c"
 Parameters:    Size  Location     Type
  dividend        2    0[COMRAM] int 
  divisor         2    2[COMRAM] int 
 Auto vars:     Size  Location     Type
  sign            1    5[COMRAM] unsigned char 
  counter         1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMRAM] int 
 Registers used:
		wreg, status,2, status,0, prodl
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_fround
		_scale
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 8 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\awdiv.c"
 Parameters:    Size  Location     Type
  dividend        2    6[COMRAM] int 
  divisor         2    8[COMRAM] int 
 Auto vars:     Size  Location     Type
  quotient        2   12[COMRAM] int 
  sign            1   11[COMRAM] unsigned char 
  counter         1   10[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    6[COMRAM] int 
 Registers used:
		wreg, status,2, status,0, prodl
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_fround
		_scale
		_sprintf
 This function uses a non-reentrant model


 *************** function __tdiv_to_l_ *****************
 Defined at:
		line 60 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftdivl.c"
 Parameters:    Size  Location     Type
  f1              3    0[COMRAM] float 
  f2              3    3[COMRAM] float 
 Auto vars:     Size  Location     Type
  quot            4    9[COMRAM] unsigned long 
  exp1            1   14[COMRAM] unsigned char 
  cntr            1   13[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4    0[COMRAM] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0       0       0
      Totals:        15       0       0       0       0       0       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function __div_to_l_ *****************
 Defined at:
		line 60 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\fldivl.c"
 Parameters:    Size  Location     Type
  f1              3    0[COMRAM] unsigned long 
  f2              3    3[COMRAM] unsigned long 
 Auto vars:     Size  Location     Type
  quot            4   10[COMRAM] unsigned long 
  exp1            1   15[COMRAM] unsigned char 
  cntr            1   14[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4    0[COMRAM] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0       0       0
      Totals:        16       0       0       0       0       0       0       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___lltoft *****************
 Defined at:
		line 35 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lltoft.c"
 Parameters:    Size  Location     Type
  c               4    8[COMRAM] unsigned long 
 Auto vars:     Size  Location     Type
  exp             1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3    8[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___llmod *****************
 Defined at:
		line 8 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\llmod.c"
 Parameters:    Size  Location     Type
  dividend        4   13[COMRAM] unsigned long 
  divisor         4   17[COMRAM] unsigned long 
 Auto vars:     Size  Location     Type
  counter         1   21[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4   13[COMRAM] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         8       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___lldiv *****************
 Defined at:
		line 8 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lldiv.c"
 Parameters:    Size  Location     Type
  dividend        4    0[COMRAM] unsigned long 
  divisor         4    4[COMRAM] unsigned long 
 Auto vars:     Size  Location     Type
  quotient        4    8[COMRAM] unsigned long 
  counter         1   12[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4    0[COMRAM] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         8       0       0       0       0       0       0       0       0
      Locals:         5       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:        13       0       0       0       0       0       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___fttol *****************
 Defined at:
		line 44 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\fttol.c"
 Parameters:    Size  Location     Type
  f1              3   42[COMRAM] float 
 Auto vars:     Size  Location     Type
  lval            4   52[COMRAM] unsigned long 
  exp1            1   56[COMRAM] unsigned char 
  sign1           1   51[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4   42[COMRAM] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          5       0       0       0       0       0       0       0       0
      Totals:        15       0       0       0       0       0       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___ftsub *****************
 Defined at:
		line 20 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftsub.c"
 Parameters:    Size  Location     Type
  f1              3   57[COMRAM] float 
  f2              3   60[COMRAM] float 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3   57[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___ftadd
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___ftadd *****************
 Defined at:
		line 86 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftadd.c"
 Parameters:    Size  Location     Type
  f1              3   45[COMRAM] float 
  f2              3   48[COMRAM] float 
 Auto vars:     Size  Location     Type
  exp1            1   56[COMRAM] unsigned char 
  exp2            1   55[COMRAM] unsigned char 
  sign            1   54[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3   45[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_sprintf
		___ftsub
 This function uses a non-reentrant model


 *************** function ___ftpack *****************
 Defined at:
		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\float.c"
 Parameters:    Size  Location     Type
  arg             3    0[COMRAM] unsigned um
  exp             1    3[COMRAM] unsigned char 
  sign            1    4[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMRAM] float 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         5       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		___ftadd
		___ftmul
		___lltoft
 This function uses a non-reentrant model


 *************** function ___ftneg *****************
 Defined at:
		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftneg.c"
 Parameters:    Size  Location     Type
  f1              3    0[COMRAM] float 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMRAM] float 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         3       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___ftge *****************
 Defined at:
		line 4 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftge.c"
 Parameters:    Size  Location     Type
  ff1             3    0[COMRAM] float 
  ff2             3    3[COMRAM] float 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function _Lcd_Write_String *****************
 Defined at:
		line 90 in file "lcd.c"
 Parameters:    Size  Location     Type
  a               2    4[COMRAM] PTR unsigned char 
		 -> Lcd_Write_Integer@s(20), Lcd_Write_Float@s(20), STR_7(9), STR_6(11), 
		 -> STR_5(6), STR_4(10), STR_3(5), STR_2(9), 
		 -> STR_1(7), 
 Auto vars:     Size  Location     Type
  i               2    8[COMRAM] int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Write_Char
 This function is called by:
		_mcu_init
		_RobotControl
		_Lcd_Write_Integer
		_Lcd_Write_Float
 This function uses a non-reentrant model


 *************** function _Lcd_Write_Char *****************
 Defined at:
		line 75 in file "lcd.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    3[COMRAM] unsigned char 
  y               1    2[COMRAM] unsigned char 
  temp            1    1[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_Lcd_Port
 This function is called by:
		_Lcd_Write_String
 This function uses a non-reentrant model


 *************** function _Lcd_Set_Cursor *****************
 Defined at:
		line 40 in file "lcd.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
  b               1    3[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  a               1    4[COMRAM] unsigned char 
  temp            1    7[COMRAM] unsigned char 
  y               1    6[COMRAM] unsigned char 
  z               1    5[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_mcu_init
		_RobotControl
 This function uses a non-reentrant model


 *************** function _Lcd_Clear *****************
 Defined at:
		line 35 in file "lcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_mcu_init
		_RobotControl
 This function uses a non-reentrant model


 *************** function _Lcd_Cmd *****************
 Defined at:
		line 27 in file "lcd.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    2[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_Lcd_Port
 This function is called by:
		_Lcd_Clear
		_Lcd_Set_Cursor
		_Lcd_Init
		_Lcd_Shift_Right
		_Lcd_Shift_Left
 This function uses a non-reentrant model


 *************** function _Lcd_Port *****************
 Defined at:
		line 6 in file "lcd.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    0[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Lcd_Cmd
		_Lcd_Init
		_Lcd_Write_Char
 This function uses a non-reentrant model


 *************** function _Pause_seg *****************
 Defined at:
		line 18 in file "Retardos.c"
 Parameters:    Size  Location     Type
  x               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  x               1    4[COMRAM] unsigned char 
  i               1    5[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_Pause_ms
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Pause_ms *****************
 Defined at:
		line 11 in file "Retardos.c"
 Parameters:    Size  Location     Type
  x               2    0[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  i               2    2[COMRAM] unsigned int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Pause_seg
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files\Microchip\xc8\v1.33\sources\common\ftge.c
		___ftge        		CODE           	2072	0000	144

C:\Program Files\Microchip\xc8\v1.33\sources\common\ftge.c estimated size: 144

C:\Program Files\Microchip\xc8\v1.33\sources\common\llmod.c
		___llmod       		CODE           	22E8	0000	102

C:\Program Files\Microchip\xc8\v1.33\sources\common\llmod.c estimated size: 102

main line follower.c
		_main          		CODE           	25A6	0000	16

main line follower.c estimated size: 16

C:\Program Files\Microchip\xc8\v1.33\sources\common\fldivl.c
		__div_to_l_    		CODE           	1926	0000	310

C:\Program Files\Microchip\xc8\v1.33\sources\common\fldivl.c estimated size: 310

C:\Program Files\Microchip\xc8\v1.33\sources\common\ftmul.c
		___ftmul       		CODE           	1B5C	0000	228

C:\Program Files\Microchip\xc8\v1.33\sources\common\ftmul.c estimated size: 228

Retardos.c
		_Pause_seg     		CODE           	23FA	0000	72
		_Pause_ms      		CODE           	250E	0000	44

Retardos.c estimated size: 116

C:\Program Files\Microchip\xc8\v1.33\sources\common\awdiv.c
		___awdiv       		CODE           	1F3E	0000	164

C:\Program Files\Microchip\xc8\v1.33\sources\common\awdiv.c estimated size: 164

C:\Program Files\Microchip\xc8\v1.33\sources\common\lldiv.c
		___lldiv       		CODE           	2102	0000	130

C:\Program Files\Microchip\xc8\v1.33\sources\common\lldiv.c estimated size: 130

funciones.c
		_RobotControl  		CODE           	1D14	0000	198
		_mcu_init      		CODE           	1DDA	0000	188

funciones.c estimated size: 386

C:\Program Files\Microchip\xc8\v1.33\sources\common\fttol.c
		___fttol       		CODE           	1C40	0000	212

C:\Program Files\Microchip\xc8\v1.33\sources\common\fttol.c estimated size: 212

C:\Program Files\Microchip\xc8\v1.33\sources\common\lltoft.c
		___lltoft      		CODE           	234E	0000	92

C:\Program Files\Microchip\xc8\v1.33\sources\common\lltoft.c estimated size: 92

C:\Program Files\Microchip\xc8\v1.33\sources\common\ftadd.c
		___ftadd       		CODE           	177A	0000	428

C:\Program Files\Microchip\xc8\v1.33\sources\common\ftadd.c estimated size: 428

shared
		__stringdata   		SMALLCONST     	0877	0000	61
		__powers_      		SMALLCONST     	0850	0000	39
		_dpowers       		SMALLCONST     	0801	0000	40
		__npowers_     		SMALLCONST     	0829	0000	39
		__initializatio		CODE           	25C4	0000	0

shared estimated size: 179

C:\Program Files\Microchip\xc8\v1.33\sources\common\doprnt.c
		_scale         		CODE           	1172	0000	974
		_sprintf       		CODE           	08B6	0000	2236
		_fround        		CODE           	1540	0000	570

C:\Program Files\Microchip\xc8\v1.33\sources\common\doprnt.c estimated size: 3780

C:\Program Files\Microchip\xc8\v1.33\sources\common\ftdivl.c
		__tdiv_to_l_   		CODE           	1A5C	0000	256

C:\Program Files\Microchip\xc8\v1.33\sources\common\ftdivl.c estimated size: 256

lcd.c
		_Lcd_Write_Stri		CODE           	2184	0000	122
		_Lcd_Init      		CODE           	2276	0000	114
		_Lcd_Write_Char		CODE           	2442	0000	56
		_Lcd_Write_Inte		CODE           	24B0	0000	50
		_Lcd_Cmd       		CODE           	2586	0000	32
		_Lcd_Set_Cursor		CODE           	23AA	0000	80
		_Lcd_Clear     		CODE           	25B6	0000	14
		_Lcd_Port      		CODE           	24E2	0000	44

lcd.c estimated size: 512

C:\Program Files\Microchip\xc8\v1.33\sources\common\Umul16.c
		___wmul        		CODE           	253A	0000	38

C:\Program Files\Microchip\xc8\v1.33\sources\common\Umul16.c estimated size: 38

C:\Program Files\Microchip\xc8\v1.33\sources\common\ftneg.c
		___ftneg       		CODE           	2560	0000	38

C:\Program Files\Microchip\xc8\v1.33\sources\common\ftneg.c estimated size: 38

C:\Program Files\Microchip\xc8\v1.33\sources\common\ftsub.c
		___ftsub       		CODE           	247A	0000	54

C:\Program Files\Microchip\xc8\v1.33\sources\common\ftsub.c estimated size: 54

C:\Program Files\Microchip\xc8\v1.33\sources\common\float.c
		___ftpack      		CODE           	1E96	0000	168

C:\Program Files\Microchip\xc8\v1.33\sources\common\float.c estimated size: 168

cny70.c
		_getCNY70Value 		CODE           	21FE	0000	120

cny70.c estimated size: 120

C:\Program Files\Microchip\xc8\v1.33\sources\common\awmod.c
		___awmod       		CODE           	1FE2	0000	144

C:\Program Files\Microchip\xc8\v1.33\sources\common\awmod.c estimated size: 144

